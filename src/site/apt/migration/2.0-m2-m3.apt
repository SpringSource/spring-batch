Spring Batch 2.0-m3 Release Notes* Bug  * {{{https://jira.spring.io/browse/BATCH-837}BATCH-837}} -         BIGINT datatype is not in Sybase but schema-sybase.sql is using it  * {{{https://jira.spring.io/browse/BATCH-853}BATCH-853}} -         broken transactional item processing  * {{{https://jira.spring.io/browse/BATCH-857}BATCH-857}} -         map daos need to be truly transactional for correct restart  * {{{https://jira.spring.io/browse/BATCH-887}BATCH-887}} -         onSkipInProcess called multiple times for same item using FaultTolerantChunkOrientedTasklet  * {{{https://jira.spring.io/browse/BATCH-889}BATCH-889}} -         SkipLimitStepFactoryBean should be FaultTolerantStepFactoryBean  * {{{https://jira.spring.io/browse/BATCH-892}BATCH-892}} -         Thread visibility issues in repeat template  * {{{https://jira.spring.io/browse/BATCH-895}BATCH-895}} -         Fix XML schema so that only top-level elements are allowed at top level (i.e. job).  * {{{https://jira.spring.io/browse/BATCH-897}BATCH-897}} -         Version is not rehydrated from database in JobInstance or JobExecution  * {{{https://jira.spring.io/browse/BATCH-912}BATCH-912}} -         Thread safety issue in JobRegistryBackgroundJobRunner  * {{{https://jira.spring.io/browse/BATCH-917}BATCH-917}} -         Concurrent modification of execution context in tasklet step  * {{{https://jira.spring.io/browse/BATCH-921}BATCH-921}} -         ExecutionContext keys are not unique enough in partition components  * {{{https://jira.spring.io/browse/BATCH-925}BATCH-925}} -         StaxEventItemWriter doesn't reset restart flag on close  * {{{https://jira.spring.io/browse/BATCH-926}BATCH-926}} -         vague skip limit for concurrent chunks  * {{{https://jira.spring.io/browse/BATCH-931}BATCH-931}} -         Write failures don't fail immediately.  * {{{https://jira.spring.io/browse/BATCH-939}BATCH-939}} -         Make step scope work with aop-auto-proxy    * Improvement  * {{{https://jira.spring.io/browse/BATCH-21}BATCH-21}} -         OutputResource abstraction for file / stream output  * {{{https://jira.spring.io/browse/BATCH-63}BATCH-63}} -         Custom namespace for Job and related (Step, and maybe some *Reader/Writer)  * {{{https://jira.spring.io/browse/BATCH-282}BATCH-282}} -         Make input parameters easier to access from ItemReaders, etc.  * {{{https://jira.spring.io/browse/BATCH-341}BATCH-341}} -         Parameter generation strategy  * {{{https://jira.spring.io/browse/BATCH-783}BATCH-783}} -         No logging for item oriented step in case of exception occured in chunk processing  * {{{https://jira.spring.io/browse/BATCH-797}BATCH-797}} -         Refactor Map daos into another repository implementation.  * {{{https://jira.spring.io/browse/BATCH-809}BATCH-809}} -         fixedLenghtTokenizer problem with 1.1.2  * {{{https://jira.spring.io/browse/BATCH-848}BATCH-848}} -         Determine best way tto support a paging iBATIS reader  * {{{https://jira.spring.io/browse/BATCH-869}BATCH-869}} -         End Time of a step or a job always null when read in a StepExecutionListener or a JobExecutionListener  * {{{https://jira.spring.io/browse/BATCH-872}BATCH-872}} -         RFC: Should FileWriterCallback have two methods, one for headers and one for footers?    * {{{https://jira.spring.io/browse/BATCH-878}BATCH-878}} -         AbstractMethodInvokingDelegator is not abstract  * {{{https://jira.spring.io/browse/BATCH-881}BATCH-881}} -         Update meta data schema to limit primary key values to Java Long sizes  * {{{https://jira.spring.io/browse/BATCH-886}BATCH-886}} -         RFC: consolidate JobInstance launching logic  * {{{https://jira.spring.io/browse/BATCH-888}BATCH-888}} -         skip listeners should be called when chunk is about to commit  * {{{https://jira.spring.io/browse/BATCH-894}BATCH-894}} -         RFC: move ExitStatus up into Core?  * {{{https://jira.spring.io/browse/BATCH-896}BATCH-896}} -         "DRY" FaultTolerantTasklet implementations  * {{{https://jira.spring.io/browse/BATCH-900}BATCH-900}} -         Retreive null values from the ExecutionContext  * {{{https://jira.spring.io/browse/BATCH-907}BATCH-907}} -         Integer support in ExecutionContext  * {{{https://jira.spring.io/browse/BATCH-913}BATCH-913}} -         Remove the JdkConcurrent* special classes  * {{{https://jira.spring.io/browse/BATCH-930}BATCH-930}} -         rename ItemSkipPolicy  * {{{https://jira.spring.io/browse/BATCH-938}BATCH-938}} -         Clean up DelimitedLineAggregator implementation    * New Feature  * {{{https://jira.spring.io/browse/BATCH-34}BATCH-34}} -         Support for multiple I/O files in a single jobRun for a particular scheduleDate.  * {{{https://jira.spring.io/browse/BATCH-679}BATCH-679}} -         Non-sequential execution  * {{{https://jira.spring.io/browse/BATCH-808}BATCH-808}} -         Provide named parameter support to JdbcCursorItemReader  * {{{https://jira.spring.io/browse/BATCH-874}BATCH-874}} -         Annotation support  * {{{https://jira.spring.io/browse/BATCH-903}BATCH-903}} -         Create test project  * {{{https://jira.spring.io/browse/BATCH-910}BATCH-910}} -         Create a sample job for JobParametersIncrementer  * {{{https://jira.spring.io/browse/BATCH-927}BATCH-927}} -         Add JobParametersIncrementer to job namespace element  * {{{https://jira.spring.io/browse/BATCH-932}BATCH-932}} -         Add reflection-based Field Extractor    * Refactoring  * {{{https://jira.spring.io/browse/BATCH-911}BATCH-911}} -         Consolidate Samples    * Task  * {{{https://jira.spring.io/browse/BATCH-624}BATCH-624}} -         Create contribution page  * {{{https://jira.spring.io/browse/BATCH-673}BATCH-673}} -         Add new Java 5.0 features  * {{{https://jira.spring.io/browse/BATCH-798}BATCH-798}} -         Tidy up chunk processing and retry  * {{{https://jira.spring.io/browse/BATCH-871}BATCH-871}} -         Create FactoryBean for FlatFileItemReader  * {{{https://jira.spring.io/browse/BATCH-893}BATCH-893}} -         Remove the HibernateAwareItemWriter?  * {{{https://jira.spring.io/browse/BATCH-904}BATCH-904}} -         Create a sample job for non sequential execution.  * {{{https://jira.spring.io/browse/BATCH-916}BATCH-916}} -         JobOperator#startNewInstance should inspect last execution status  * {{{https://jira.spring.io/browse/BATCH-922}BATCH-922}} -         Why is there always one more commit than seems necessary?* Sub-task  * {{{https://jira.spring.io/browse/BATCH-264}BATCH-264}} -         Dependencies among jobs  * {{{https://jira.spring.io/browse/BATCH-676}BATCH-676}} -         Create sample job for 'non sequential step execution'  * {{{https://jira.spring.io/browse/BATCH-726}BATCH-726}} -         Pass a resource pattern to MultiResourceItemReader as a JobParameter  * {{{https://jira.spring.io/browse/BATCH-733}BATCH-733}} -         Upgrade StepExecutionResourceProxy to be able to use values from job execution context.  * {{{https://jira.spring.io/browse/BATCH-801}BATCH-801}} -         Add support for passing parameters from execution context  * {{{https://jira.spring.io/browse/BATCH-816}BATCH-816}} -         Make sure all dependencies are part of the Enterprise Repository  * {{{https://jira.spring.io/browse/BATCH-817}BATCH-817}} -         Change project names to correspond with bundle names  * {{{https://jira.spring.io/browse/BATCH-858}BATCH-858}} -         Pause / resume of Job  * {{{https://jira.spring.io/browse/BATCH-875}BATCH-875}} -         Pull jobRepository.save() out of Step implementations and put it in the driving Job  * {{{https://jira.spring.io/browse/BATCH-879}BATCH-879}} -         Decision states: not a regular step, just a volatile decision based on information in the JobExecution.  * {{{https://jira.spring.io/browse/BATCH-880}BATCH-880}} -         Suspend after step and wait for user input  * {{{https://jira.spring.io/browse/BATCH-890}BATCH-890}} -         Stop transition in XML namespace  * {{{https://jira.spring.io/browse/BATCH-891}BATCH-891}} -         Create Annotations  * {{{https://jira.spring.io/browse/BATCH-905}BATCH-905}} -         MultiResourceItemReader should be more dynamic in nature